{"version":3,"sources":["close-icon.svg","search/KeywordInput.js","search/LocationSelector.js","search/ResultCard.js","search/Results.js","search/Search.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","KeywordInput","keywords","handleChange","placeholderText","inputField","createRef","removeWord","index","keywordsCopy","splice","className","map","word","type","onClick","onKeyDown","e","preventDefault","keyword","value","toLowerCase","includes","current","placeholder","LocationSelector","locations","location","setLocation","console","log","onChange","disabled","hidden","k","locationName","ResultCard","name","distance","rel","href","Results","results","result","Search","useState","updateKeywords","updateLocation","likes","updateLikes","dislikes","updateDislikes","updateResults","buildQueryURLFromState","currKeywords","currLocation","baseURL","window","keywordsString","toString","replace","locString","queryAPI","a","queryURL","fetch","method","response","json","data","onSubmit","entries","0","1","2","3","4","5","App","Component","Home","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.729f1384.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n});\n\nvar SvgCloseIcon = function SvgCloseIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCloseIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/close-icon.0f9f00b6.svg\";\nexport { ForwardRef as ReactComponent };","import React, { createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ReactComponent as CloseIcon } from '../close-icon.svg';\r\n\r\n/**\r\n * Implements a text input box that displays entered phrases on the left side of the box.\r\n * Reference: https://medium.com/@jerrylowm/build-a-tags-input-react-component-from-scratch-1524f02acb9a\r\n */\r\nconst KeywordInput = ({ keywords, handleChange, placeholderText }) => {\r\n  let inputField = createRef();\r\n\r\n  const inputEnter = e => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n    }\r\n    const keyword = e.target.value.toLowerCase();\r\n    if (e.key === 'Enter' && keyword) {\r\n      if (!keywords.includes(keyword)) {\r\n        handleChange([...keywords, keyword]);\r\n        inputField.current.value = '';\r\n      }\r\n    }\r\n    else if (e.key === 'Backspace' && !keyword) {\r\n      removeWord(keywords.length - 1);\r\n    }\r\n  }\r\n\r\n  const removeWord = index => {\r\n    const keywordsCopy = [...keywords];\r\n    keywordsCopy.splice(index, 1);\r\n    handleChange(keywordsCopy);\r\n  }\r\n\r\n  // console.log(this.props);\r\n  return (\r\n    <div className='tag-input'>\r\n      <ul className='tag-list'>\r\n        {keywords.map((word, i) => {\r\n          return (\r\n            <li key={word}>\r\n              {word}\r\n              <button type='button' onClick={() => { removeWord(i) }}>\r\n                <CloseIcon />\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n        <li className='tag-input-field'>\r\n          <input type='text'\r\n            onKeyDown={inputEnter}\r\n            ref={inputField}\r\n            placeholder={keywords.length ? '' : placeholderText}>\r\n          </input>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nKeywordInput.propTypes = {\r\n  keywords: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  placeholderText: PropTypes.string\r\n}\r\n\r\nexport default KeywordInput;\r\n","import React from 'react';\r\nimport '../index.css';\r\n\r\n/**\r\n * Implements a dropdown menu that selects locations.\r\n */\r\nconst LocationSelector = ({ locations, location, setLocation }) => {\r\n  console.log(location);\r\n  return (\r\n    <select className='location-select'\r\n            value={location}\r\n            onChange={e => {setLocation(e.target.value === \"\" ? null : e.target.value)}}>\r\n      <option disabled hidden value='-1'>Choose a location</option>>\r\n      {locations.map(([k, locationName]) => <option key={k} value={k}>{locationName}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default LocationSelector;\r\n","import React from \"react\";\r\nimport \"./ResultCard.css\";\r\n\r\nconst ResultCard = ({ name, distance }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <div className=\"rows\">\r\n          <div className=\"row1\">\r\n            <div className=\"card-title\">\r\n              <a\r\n                className=\"card-title-link\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={\"https://www.google.com\"}\r\n              >\r\n                <h5 className=\"card-title-text\">{name}</h5>\r\n              </a>\r\n            </div>\r\n            <div className=\"card-rating\">\r\n              <h5 className=\"card-rating-text\">rating placeholder</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"row2\">\r\n            <div className=\"card-location\">\r\n              <h6 className=\"card-rating-text\">location placeholder</h6>\r\n            </div>\r\n            <div className=\"card-keywords\">\r\n              <h6 className=\"card-keywords-text\">keywords placeholder</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultCard;\r\n","import React from 'react';\r\nimport ResultCard from './ResultCard';\r\nimport './Results.css'\r\n\r\nconst Results = ({ results }) => {\r\n  return (\r\n    <div className=\"results-container\">\r\n      {results && results.map(\r\n        (result) => (\r\n          <ResultCard\r\n            name={result.name}\r\n            distance={result.distance}\r\n            key={result.name}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;","import React, { useState, Fragment } from 'react';\r\nimport KeywordInput from './KeywordInput';\r\nimport LocationSelector from './LocationSelector';\r\nimport Results from './Results';\r\n\r\nconst Search = () => {\r\n  const [keywords, updateKeywords] = useState([]);\r\n  const [location, updateLocation] = useState(-1);\r\n  const [likes, updateLikes] = useState([]);\r\n  const [dislikes, updateDislikes] = useState([]);\r\n  const locations = {\r\n    0: 'New York',\r\n    1: 'Dublin',\r\n    2: 'California',\r\n    3: 'Istanbul',\r\n    4: 'Izmir',\r\n    5: 'Oslo'\r\n  };\r\n  const [results, updateResults] = useState([\r\n    {\r\n      name: 'McDonalds',\r\n      distance: 1\r\n    },\r\n    {\r\n      name: 'Chick fil a',\r\n      distance: 1\r\n    }\r\n  ]);\r\n\r\n  const buildQueryURLFromState = (currKeywords, currLocation) => {\r\n    let baseURL = `${window.location}search`;\r\n    let keywordsString = currKeywords.toString().replace(/ /g, '%20');\r\n    let locString = `${currLocation}`;\r\n    baseURL += `${(currKeywords ? '?keywords=' + keywordsString : '')}`;\r\n    if (currLocation >= 0)\r\n      baseURL += `${(currKeywords ? '&' : '?')}zip=${locString}`;\r\n\r\n    return baseURL;\r\n  };\r\n\r\n  const queryAPI = async () => {\r\n    if (keywords.length > 0 || location >= 0) {\r\n      const queryURL = buildQueryURLFromState(keywords, location);\r\n      console.log(queryURL);\r\n      // const queryURL = `${window.location}search`;\r\n      let response = await (fetch(queryURL, { method: 'GET' }));\r\n      console.log(response);\r\n      let json = await (response.json());\r\n      console.log(json);\r\n      updateResults(json.data.results);\r\n    }\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    queryAPI();\r\n    e.preventDefault(e);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form className='search-area' onSubmit={formSubmit}>\r\n        <div className='form-row-1'>\r\n          <div className='keyword-search'>\r\n            <KeywordInput keywords={keywords} handleChange={updateKeywords} placeholderText={'Enter some keywords...'} />\r\n          </div>\r\n          <div className='location-selector'>\r\n            <LocationSelector\r\n              locations={Object.entries(locations)}\r\n              location={location}\r\n              setLocation={updateLocation}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row-2'>\r\n          <div className='input-restaurant likes'>\r\n            <KeywordInput keywords={likes} handleChange={updateLikes} placeholderText={'Enter some restaurants you like...'} />\r\n          </div>\r\n          <div className='input-restaurant dislikes'>\r\n            <KeywordInput keywords={dislikes} handleChange={updateDislikes} placeholderText={'Enter some restaurants you don\\'t like...'} />\r\n          </div>\r\n        </div>\r\n        <button className='submit' type='submit'>Search!</button>\r\n      </form>\r\n      <div className='results-area'>\r\n        <Results\r\n          results={results}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Search from './search/Search';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      // <Router>\r\n      //   <nav>\r\n      //     <ul>\r\n      //       <li>\r\n      //         <Link to=\"/\">Home</Link>\r\n      //       </li>\r\n      //       <li>\r\n      //         <Link to=\"/about\">About</Link>\r\n      //       </li>\r\n      //     </ul>\r\n      //   </nav>\r\n\r\n      //   {/* A <Switch> looks through its children <Route>s and\r\n      //       renders the first one that matches the current URL. */}\r\n      //   <Switch>\r\n      //     <Route path=\"/about\">\r\n      //       <About />\r\n      //     </Route>\r\n      //     <Route path=\"/\">\r\n      //       <Home />\r\n      //     </Route>\r\n      //   </Switch>\r\n      // </Router>\r\n      <Home />\r\n    );\r\n  }\r\n}\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h1 className='title'>Restaurant Match</h1>\r\n        <Search></Search>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div id='about-placeholder'></div>\r\n    )\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}